// <auto-generated />
using System;
using CalendarAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CalendarAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250325163027_Initialize")]
    partial class Initialize
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CalendarAPI.Month", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Months");
                });

            modelBuilder.Entity("CalendarAPI.WorkDay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MonthId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("Today")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("MonthId");

                    b.ToTable("WorkDays");
                });

            modelBuilder.Entity("CalendarAPI.WorkTime", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("WorkDayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WorkerGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WorkDayId");

                    b.ToTable("WorkTimes");
                });

            modelBuilder.Entity("CalendarAPI.Worker", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("CalendarAPI.WorkDay", b =>
                {
                    b.HasOne("CalendarAPI.Month", null)
                        .WithMany("Days")
                        .HasForeignKey("MonthId");
                });

            modelBuilder.Entity("CalendarAPI.WorkTime", b =>
                {
                    b.HasOne("CalendarAPI.WorkDay", null)
                        .WithMany("ListOfWorktime")
                        .HasForeignKey("WorkDayId");
                });

            modelBuilder.Entity("CalendarAPI.Month", b =>
                {
                    b.Navigation("Days");
                });

            modelBuilder.Entity("CalendarAPI.WorkDay", b =>
                {
                    b.Navigation("ListOfWorktime");
                });
#pragma warning restore 612, 618
        }
    }
}
